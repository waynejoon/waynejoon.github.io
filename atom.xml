<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>WayneJH Blog</title>
  
  
  <link href="https://waynejoon.github.io/atom.xml" rel="self"/>
  
  <link href="https://waynejoon.github.io/"/>
  <updated>2025-06-19T12:10:14.038Z</updated>
  <id>https://waynejoon.github.io/</id>
  
  <author>
    <name>WayneJoon.H</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>玄机靶场 | Where-1S-tHe-Hacker</title>
    <link href="https://waynejoon.github.io/posts/Xuanji-CTF-Where-Is-The-Hacker/"/>
    <id>https://waynejoon.github.io/posts/Xuanji-CTF-Where-Is-The-Hacker/</id>
    <published>2025-06-18T12:13:42.000Z</published>
    <updated>2025-06-19T12:10:14.038Z</updated>
    
    <content type="html"><![CDATA[<h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><p>我一开始用的是在线靶机，但是因为一些不可抗拒因素，具体参考步骤#11，所以最终把靶机下载到本地分析，同时也能省点金币，题目可以在划水但不摆烂公众号下载</p><p>题目下载地址：<a href="https://pan.baidu.com/s/1MwRbI6Cbz2j_hlHInVL1Bg?pwd=fmzu">https://pan.baidu.com/s/1MwRbI6Cbz2j_hlHInVL1Bg?pwd=fmzu</a></p><p>服务器账号密码  admin  Aa123456</p><p>注：样本请勿在本地运行</p><h3 id="索引"><a href="#索引" class="headerlink" title="索引"></a>索引</h3><p><img src="https://oss.waynejoons.icu/picphoto/20250617213754535.png"></p><h3 id="步骤-1"><a href="#步骤-1" class="headerlink" title="步骤#1"></a>步骤#1</h3><p><strong>通过本地 PC RDP到服务器并且找到黑客ID 为多少,将黑客ID 作为 FLAG 提交;</strong></p><p>打开网页根目录，发现index.php被挂了黑页，在文件内容里面找到黑客ID</p><p><img src="https://oss.waynejoons.icu/picphoto/20250617162531550.png"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">flag&#123;X123567X&#125;</span><br></pre></td></tr></table></figure><h3 id="步骤-2"><a href="#步骤-2" class="headerlink" title="步骤#2"></a>步骤#2</h3><p><strong>通过本地 PC RDP到服务器并且找到黑客在什么时间修改了网站主页,将黑客修改了网站主页的时间 作为 FLAG 提交（y-m-d-4:22:33）;</strong></p><p>直接查看属性，找到修改时间</p><p><img src="https://oss.waynejoons.icu/picphoto/20250617163053125.png"></p><p>提交的时候有个问题，如果时间你是直接复制属性中的，提交时会显示错误，因为属性中的时间携带不可见字符，正确的做法是自己手打进去，具体可以看看010editor的分析</p><p><img src="https://oss.waynejoons.icu/picphoto/20250617201037455.png"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">flag&#123;2023-11-6-4:55:13&#125;</span><br></pre></td></tr></table></figure><h3 id="步骤-3"><a href="#步骤-3" class="headerlink" title="步骤#3"></a>步骤#3</h3><p><strong>通过本地 PC RDP到服务器并且找到黑客第一个webshell文件名是,将第一个webshell文件名 作为FLAG 提交;</strong></p><p>可以用D盾，也可以手工排查，这里我选择手工排查</p><p>找到Apache目录下的访问日志</p><p><img src="https://oss.waynejoons.icu/picphoto/20250617165532102.png"></p><p>前面大量的HEAD表示的是黑客在进行目录扫描，可以不看，直接跳到后半部分扫描结束那里，通过排查，发现两个疑似webshell的可疑文件</p><p><img src="https://oss.waynejoons.icu/picphoto/20250617170431824.png"></p><p>去根目录下找到对应的文件，查看进行确认</p><p><img src="https://oss.waynejoons.icu/picphoto/image-20250617170613231.png"></p><p>发现两个都是黑客上传的webshell文件，按照时间顺序，第一个webshell文件名是SystemConfig.php</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">flag&#123;SystemConfig.php&#125;</span><br></pre></td></tr></table></figure><h3 id="步骤-4"><a href="#步骤-4" class="headerlink" title="步骤#4"></a>步骤#4</h3><p><strong>通过本地 PC RDP到服务器并且找到黑客第二个webshell文件名是,将第二个webshell文件名 作为FLAG 提交;</strong></p><p>同上，第二个webshell文件名是syscon.php</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">flag&#123;syscon.php&#125;</span><br></pre></td></tr></table></figure><h3 id="步骤-5"><a href="#步骤-5" class="headerlink" title="步骤#5"></a>步骤#5</h3><p><strong>通过本地 PC RDP到服务器并且找到黑客第二个webshell的连接密码是,将第二个webshell的连接密码 作为FLAG 提交;</strong></p><p>步骤三那里可以得到第二个webshell的连接密码是pass</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">flag&#123;pass&#125;</span><br></pre></td></tr></table></figure><h3 id="步骤-6"><a href="#步骤-6" class="headerlink" title="步骤#6"></a>步骤#6</h3><p><strong>通过本地 PC RDP到服务器并且找到黑客新建的隐藏账户,将新建的隐藏账户名字 作为FLAG 提交;</strong></p><p>有很多方法可以实现，这里选择注册表查看</p><p>win+r然后输入<code>regedit</code>打开注册表编辑器，找到HKEY_LOCAL_MACHINE\SAM\SAM，但是这里不能直接查看，我们右键点击SAM，赋予完全控制权限</p><p><img src="https://oss.waynejoons.icu/picphoto/20250617171727151.png"></p><p>然后重新打开注册表，进入HKEY_LOCAL_MACHINE\SAM\SAM\Domains\Account\Users\Names，找到当前计算机全部用户，发现隐藏用户为admin$</p><p><img src="https://oss.waynejoons.icu/picphoto/20250617171859371.png"></p><p>有时候攻击者可能不会直接新增隐藏用户，而是通过修改Guest用户注册表对应的F值（权限分配）与本地管理Administrator的权限相同，相当于克隆了Administrator，这也需要我们额外注意</p><p><img src="https://oss.waynejoons.icu/picphoto/20250617172829611.png"></p><p><img src="https://oss.waynejoons.icu/picphoto/20250617172904484.png"></p><p>还有一个方法，就是直接在此电脑那里查看，更快速，但是平时的话还是建议用注册表来分析，更加精准</p><p><img src="https://oss.waynejoons.icu/picphoto/image-20250617172433866.png"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">flag&#123;admin$&#125;</span><br></pre></td></tr></table></figure><h3 id="步骤-7"><a href="#步骤-7" class="headerlink" title="步骤#7"></a>步骤#7</h3><p><strong>通过本地 PC RDP到服务器并且找到黑客隐藏账户创建时间是,将隐藏账户创建时间是 作为FLAG 提交（答案格式：2024&#x2F;12&#x2F;3 9:16:23）;</strong></p><p>直接cmd打开，输入<code>net user admin$</code>查看账户详细信息</p><p><img src="https://oss.waynejoons.icu/picphoto/20250617173055149.png"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">flag&#123;2023/11/6 4:45:34&#125;</span><br></pre></td></tr></table></figure><h3 id="步骤-8"><a href="#步骤-8" class="headerlink" title="步骤#8"></a>步骤#8</h3><p><strong>通过本地 PC RDP到服务器并且找到黑客添加隐藏账户进管理员组的时间,将添加隐藏账户进管理员组的时间 作为FLAG 提交（答案格式：2024&#x2F;12&#x2F;3 9:16:23）;</strong></p><p>这里要用到系统事件分析，按Win+R键输入<code>eventvwr.msc</code>打开事件查看器</p><p>常见事件ID类型</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">4624 登录成功</span><br><span class="line">4625 登录失败，如果有人尝试破解系统密码，可以看到大量连续登录失败信息</span><br><span class="line">4726 删除用户</span><br><span class="line">4722 账号启用</span><br><span class="line">4725 账号禁用</span><br><span class="line">4723 修改密码</span><br><span class="line">4724 重置密码</span><br><span class="line">4634 注销成功</span><br><span class="line">4647 用户启动的注销</span><br><span class="line">4672 管理员登录</span><br><span class="line">4720 创建用户，使用系统漏洞攻击成功后，往往会创建一个用户，方便远程登录</span><br><span class="line">4732 加入安全组，常见于将新用户加入管理员组</span><br><span class="line">4733 移除出安全组</span><br><span class="line">4684 通过登陆界面登陆的</span><br></pre></td></tr></table></figure><p>这里我们筛选4732，时间的话我们根据admin$的创建时间，选择2023&#x2F;11&#x2F;6 4:45:00开始，结束时间随便，可以选小点缩小范围</p><p><img src="https://oss.waynejoons.icu/picphoto/20250617173856062.png"></p><p>一个个点进去查看，找到添加到管理员组的事件</p><p><img src="https://oss.waynejoons.icu/picphoto/20250617174152500.png"></p><p>注意时间格式</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">flag&#123;2023/11/6 4:46:07&#125;</span><br></pre></td></tr></table></figure><h3 id="步骤-9"><a href="#步骤-9" class="headerlink" title="步骤#9"></a>步骤#9</h3><p><strong>通过本地 PC RDP到服务器并且找到黑客在什么时间从文件中读取保留的密钥,将读取保留的密钥的时间 作为FLAG 提交（答案格式：2024&#x2F;12&#x2F;3 9:16:23）;</strong></p><p>这里我们聚焦于两个事件ID</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">5051 将保留的密钥写入文件</span><br><span class="line">5058 从文件中读取保留的密钥</span><br></pre></td></tr></table></figure><p>也是通过事件查看器去找，时间我这里选择不变</p><p><img src="https://oss.waynejoons.icu/picphoto/20250617174904016.png"></p><p>也是按时间顺序找就行</p><p><img src="https://oss.waynejoons.icu/picphoto/image-20250617175649943.png"></p><p>注意时间格式</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">flag&#123;2023/11/6 4:46:58&#125;</span><br></pre></td></tr></table></figure><h3 id="步骤-10"><a href="#步骤-10" class="headerlink" title="步骤#10"></a>步骤#10</h3><p><strong>通过本地 PC RDP到服务器并且找到黑客通过隐藏账户通过(PTH)哈希传递攻击登录的时间是,将(PTH)哈希传递攻击登录的时间 作为FLAG 提交;</strong></p><p>哈希传递攻击指的是攻击者无需知道用户的明文密码，只需窃取密码的哈希值（Hash），就能冒充该用户登录到网络中的其他系统。</p><p>这里我们聚焦于NtLmSsp（NT LAN Manager Security Support Provider），它用于处理 NTLM 协议的身份验证，我们去筛选登录事件，找到登录进程为NtLmSsp的即可，对应的事件ID为4624</p><p><img src="https://oss.waynejoons.icu/picphoto/image-20250617180524068.png"></p><p>按照时间顺序一个个筛选</p><p><img src="https://oss.waynejoons.icu/picphoto/20250617180621831.png"></p><p>注意时间格式</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">flag&#123;2023/11/6 4:47:28&#125;</span><br></pre></td></tr></table></figure><h3 id="步骤-11"><a href="#步骤-11" class="headerlink" title="步骤#11"></a>步骤#11</h3><p><strong>通过本地 PC RDP到服务器并且找到黑客上传的两个CobaltStrike木马文件名,将上传的两个CobaltStrike木马文件名 作为FLAG 提交（答案格式：”A.exe,B.exe”）;</strong></p><p>这里用绿盟D-Eyes主机命令行应急工具，将工具上传到目标机器，cmd输入<code>D-Eyes fs</code>扫盘</p><p>如果是多盘路径可以用<code>D-Eyes fs -P C:\\,D:\\tmp,D:\\tools</code>，也可以用<code>D-Eyes.exe ps</code>进行进程扫描，排查异常进程信息</p><p>这里我们就使用<code>D-Eyes fs</code>扫盘</p><p><img src="https://oss.waynejoons.icu/picphoto/20250617181952959.png"></p><p>这里只找到之前的webshell文件，并没有找到cs可疑文件，原因是部分文件被Windows Defender自动隔离了，需要从隔离区恢复</p><p><img src="https://oss.waynejoons.icu/picphoto/20250617182323541.png"></p><p>这里有个问题，如果用的是玄机靶场的话，已隔离威胁那里是找不到这些被隔离的文件，估计是那边默认给删除了，然后没被工作人员发现</p><p><img src="https://oss.waynejoons.icu/picphoto/20250617192539101.png"></p><p>所以我用的是下载来的靶场，还原文件之后再扫一遍，排查可疑文件，发现多了两个文件</p><p><img src="https://oss.waynejoons.icu/picphoto/20250617190500523.png"></p><p>把SystemTemp.exe和SysnomT.exe放进安恒云沙箱检测（拉取文件到本地之后不要运行）</p><p><img src="https://oss.waynejoons.icu/picphoto/20250617191412052.png"></p><p><img src="https://oss.waynejoons.icu/picphoto/20250617190959334.png"></p><p>可以看到这两个文件都是cs控制程序</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">flag&#123;SystemTemp.exe,SysnomT.exe&#125;</span><br></pre></td></tr></table></figure><h3 id="靶机内部题目答案"><a href="#靶机内部题目答案" class="headerlink" title="靶机内部题目答案"></a>靶机内部题目答案</h3><p>这是靶机内部<strong>答题.exe</strong>的答案，不是玄机靶场的答案，玄机的答案在上面</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">X123567X</span><br><span class="line">2023‎年‎11‎月‎6‎日，‏‎4:55:13</span><br><span class="line">SystemConfig.php</span><br><span class="line">syscon.php</span><br><span class="line">pass</span><br><span class="line">admin$</span><br><span class="line">2023/11/6 4:45:34</span><br><span class="line">2023/11/6 4:46:07</span><br><span class="line">2023/11/6 4:46:58</span><br><span class="line">2023/11/6 4:47:28</span><br><span class="line">SystemTemp.exe和SysnomT.exe</span><br></pre></td></tr></table></figure><p><img src="https://oss.waynejoons.icu/picphoto/20250617194919927.png"></p><h3 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h3><p><strong>特别鸣谢</strong></p><p>划水但不摆烂：<a href="https://mp.weixin.qq.com/s/4UoIw-On-0taB8s0xtjkAw">https://mp.weixin.qq.com/s/4UoIw-On-0taB8s0xtjkAw</a></p><p>Peterpan.exe：<a href="https://blog.csdn.net/administratorlws/article/details/141672688">https://blog.csdn.net/administratorlws/article/details/141672688</a></p>]]></content>
    
    
    <summary type="html">玄机靶场刷题记录</summary>
    
    
    
    <category term="应急响应" scheme="https://waynejoon.github.io/categories/%E5%BA%94%E6%80%A5%E5%93%8D%E5%BA%94/"/>
    
    
    <category term="应急响应" scheme="https://waynejoon.github.io/tags/%E5%BA%94%E6%80%A5%E5%93%8D%E5%BA%94/"/>
    
  </entry>
  
  <entry>
    <title>玄机靶场 | blueteam的小心思</title>
    <link href="https://waynejoon.github.io/posts/Xuanji-CTF-Blue-Team-Forensics/"/>
    <id>https://waynejoon.github.io/posts/Xuanji-CTF-Blue-Team-Forensics/</id>
    <published>2025-01-25T15:13:42.000Z</published>
    <updated>2025-06-20T09:33:31.879Z</updated>
    
    <content type="html"><![CDATA[<h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><p>日常玄机靶场刷题记录</p><h3 id="步骤-1-1"><a href="#步骤-1-1" class="headerlink" title="步骤#1.1"></a>步骤#1.1</h3><p><strong>题目：攻击者通过什么密码成功登录了网站的后台？提交密码字符串的小写md5值，格式flag{md5}。</strong></p><p>在根目录发现wireshark.pcap文件，可以用wireshark进行流量分析</p><p><img src="https://oss.waynejoons.icu/picphoto/image-20250124213638285.png"></p><p>将文件通过SFTP传到本地，过滤出http流量</p><p><img src="https://oss.waynejoons.icu/picphoto/image-20250124213730214.png"></p><p>一个一个分析，发现可疑流量，直接得到账号密码</p><p><img src="https://oss.waynejoons.icu/picphoto/image-20250124213901864.png"></p><p>md5加密得</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">flag&#123;d63edb0e9df4cf411398e3658c0237e0&#125;</span><br></pre></td></tr></table></figure><h3 id="步骤-1-2"><a href="#步骤-1-2" class="headerlink" title="步骤#1.2"></a>步骤#1.2</h3><p><strong>题目：攻击者在哪个PHP页面中成功上传了后门文件？例如upload.php页面，上传字符串”upload.php”的小写md5值，格式flag{md5}。</strong></p><p>继续往下分析，发现可疑流量</p><p><img src="https://oss.waynejoons.icu/picphoto/image-20250124214228529.png"></p><p>发现这里上传了一个zip压缩包，追踪TCP流</p><p><img src="https://oss.waynejoons.icu/picphoto/image-20250124214325549.png"></p><p>发现一句话木马，确定攻击者是通过该页面上传木马文件，加密pluginmgr.php字符得到</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">flag&#123;b05c0be368ffa72e6cb2df7e1e1b27be&#125;</span><br></pre></td></tr></table></figure><h3 id="步骤-1-3"><a href="#步骤-1-3" class="headerlink" title="步骤#1.3"></a>步骤#1.3</h3><p><strong>题目：找到攻击者上传的webshell文件，提交该文件的小写md5值，格式flag{md5}。</strong></p><p>直接查找关键字</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">grep -r --include=&quot;*.php&quot; &#x27;eval($_POST&#x27; /</span><br></pre></td></tr></table></figure><p><img src="https://oss.waynejoons.icu/picphoto/image-20250124214732775.png"></p><p>加密文件得到flag</p><p><img src="https://oss.waynejoons.icu/picphoto/image-20250124214821373.png"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">flag&#123;a097b773ced57bb7d51c6719fe8fe5f5&#125;</span><br></pre></td></tr></table></figure><h3 id="步骤-1-4"><a href="#步骤-1-4" class="headerlink" title="步骤#1.4"></a>步骤#1.4</h3><p><strong>题目：攻击者后续又下载了一个可执行的后门程序，提交该文件的小写md5值，格式flag{md5}。</strong></p><p>继续分析流量，发现可疑流量</p><p><img src="https://oss.waynejoons.icu/picphoto/image-20250124215115623.png"></p><p>发现这个木马文件在尝试下载一个文件，直接搜索这个文件</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">find / -name &quot;is.world&quot;</span><br></pre></td></tr></table></figure><p><img src="https://oss.waynejoons.icu/picphoto/image-20250124215213748.png"></p><p>这里有个坑，不能直接加密文件，要用引号括起来再加密，不然中间的空格会分隔指令</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">md5sum &quot;/var/www/html/plugins/.       /is.world&quot;</span><br></pre></td></tr></table></figure><p><img src="https://oss.waynejoons.icu/picphoto/image-20250124215419804.png"></p><p>得到flag</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">flag&#123;ee279c39bf3dcb225093bdbafeb9a439&#125;</span><br></pre></td></tr></table></figure><h3 id="步骤-1-5"><a href="#步骤-1-5" class="headerlink" title="步骤#1.5"></a>步骤#1.5</h3><p><strong>题目：攻击者创建了后门用户的名称是？例如attack恶意用户，上传字符串”attack”的小写md5值，格式flag{md5}。</strong></p><p>查看用户列表</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cat /etc/passwd</span><br></pre></td></tr></table></figure><p><img src="https://oss.waynejoons.icu/picphoto/image-20250124215605268.png"></p><p>发现有个用户的用户ID和组ID都为0，权限很高，一般情况下只有管理员的UID和GID为0，说明这个是后门用户，直接加密得到flag</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">flag&#123;4cda3461543c9a770a3349760594facd&#125;</span><br></pre></td></tr></table></figure><h3 id="步骤-1-6"><a href="#步骤-1-6" class="headerlink" title="步骤#1.6"></a>步骤#1.6</h3><p><strong>题目：攻击者创建了一个持久化的配置项，导致任意用户登录就会触发后门的连接。提交该配置项对应配置文件的小写md5值，格式flag{md5}。</strong></p><p>一般这种情况是修改了shell配置文件，常见的配置文件包括</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">用户级别</span><br><span class="line">1、&quot;~/.bashrc&quot;用于配置非登录 Shell 的环境（例如桌面终端）, 每次启动新的非登录 Shell 时加载</span><br><span class="line">2、&quot;~/.bash_profile&quot;用于配置 登录 Shell 的环境, 每次登录（例如通过 SSH 或控制台登录系统）</span><br><span class="line">3、&quot;~/.profile&quot;用于配置 登录 Shell 环境变量, 在用户登录时执行</span><br><span class="line">4、&quot;~/.zshrc&quot;每次启动 Z Shell 的非登录会话时加载</span><br><span class="line">5、&quot;~/.bash_logout&quot;在用户退出登录 Shell 时执行</span><br><span class="line"></span><br><span class="line">系统级别</span><br><span class="line">1、&quot;/etc/profile&quot;用于设置所有用户的登录 Shell 环境变量, 所有用户登录时加载</span><br><span class="line">2、&quot;/etc/bash.bashrc&quot;提供全局的非登录 Shell 配置, 每次启动新的非登录 Shell 时加载</span><br><span class="line">3、&quot;/etc/profile.d/*.sh&quot;当 /etc/profile 加载时, 会依次加载 /etc/profile.d 中的所有脚本文件（通常是 .sh 文件）</span><br><span class="line">4、&quot;/etc/environment&quot;用于配置系统范围的环境变量, 在用户登录前加载，影响所有用户和守护进程</span><br></pre></td></tr></table></figure><p>一般情况执行顺序，可以用作参考</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">1.登录 Shell</span><br><span class="line">系统级配置文件：</span><br><span class="line">/etc/profile</span><br><span class="line">/etc/profile.d/*.sh</span><br><span class="line">用户级配置文件：</span><br><span class="line">~/.bash_profile（如果不存在，则加载 ~/.profile）</span><br><span class="line">2.非登录 Shell</span><br><span class="line">系统级配置文件：</span><br><span class="line">/etc/bash.bashrc（如果系统支持）</span><br><span class="line">用户级配置文件：</span><br><span class="line">~/.bashrc</span><br></pre></td></tr></table></figure><p>这里一个一个尝试即可，发现&#x2F;etc&#x2F;profile有问题</p><p><img src="https://oss.waynejoons.icu/picphoto/image-20250124220804951.png"></p><p>直接md5sum加密得到flag</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">md5sum /etc/profile</span><br><span class="line">#flag&#123;65bf3e4a9ac90d75ec28be0317775618&#125;</span><br></pre></td></tr></table></figure><h3 id="步骤-1-7"><a href="#步骤-1-7" class="headerlink" title="步骤#1.7"></a>步骤#1.7</h3><p><strong>题目：攻击者创建了一个持久化的配置项，导致只有root用户登录才会触发后门的连接。提交该配置项对应配置文件的小写md5值，格式flag{md5}。</strong></p><p>搜索后门触发命令，这里搜索的是用户目录下的可疑配置文件</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">grep -r -E &#x27;(nc|curl|wget|bash|python|eval|base64)&#x27; ~/</span><br></pre></td></tr></table></figure><p><img src="https://oss.waynejoons.icu/picphoto/image-20250124221150962.png"></p><p>发现有个配置文件尝试外联恶意网址</p><p>直接加密得到flag</p><p><img src="https://oss.waynejoons.icu/picphoto/image-20250124221303685.png"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">flag&#123;4acc9c465eeeb139c194893ec0a8bcbc&#125;</span><br></pre></td></tr></table></figure><h3 id="步骤-1-8"><a href="#步骤-1-8" class="headerlink" title="步骤#1.8"></a>步骤#1.8</h3><p><strong>题目：攻击者加密了哪个数据库？提交数据库的文件夹名，例如user数据库对应存放位置为user文件夹，上传字符串”user”的小写md5值，格式flag{md5}。</strong></p><p>确定数据库类型</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl list-units --type=service | grep -E &#x27;(mysql|mariadb|postgresql|mongodb|redis)&#x27;</span><br></pre></td></tr></table></figure><p><img src="https://oss.waynejoons.icu/picphoto/image-20250124223959804.png"></p><p>查看数据库的登录信息，一般放在配置文件“config.inc.php”里面</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">find / -name config.inc.php</span><br></pre></td></tr></table></figure><p><img src="https://oss.waynejoons.icu/picphoto/image-20250124221600336.png"></p><p>得到数据库账号密码，用 Premium连接，一个一个尝试，发现有个数据库无法查看，说明被加密了，这里用的网图</p><p><img src="https://oss.waynejoons.icu/picphoto/image-20250124221800705.png"></p><p>查找对应文件，可以得到文件所在路径</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">find / -name JPMorgan@0020Chase</span><br></pre></td></tr></table></figure><p><img src="https://oss.waynejoons.icu/picphoto/image-20250124222206501.png"></p><p>加密文件夹名得到flag</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">flag&#123;0928a5424aa6126e5923980ca103560e&#125;</span><br></pre></td></tr></table></figure><h3 id="步骤-1-9"><a href="#步骤-1-9" class="headerlink" title="步骤#1.9"></a>步骤#1.9</h3><p><strong>题目：解密数据库，提交Harper用户对应Areer的值。提交Areer值的小写md5值，格式flag{md5}。</strong></p><p>查看mysql文件夹，发现有个可疑文件</p><p><img src="https://oss.waynejoons.icu/picphoto/image-20250124222530815.png"></p><p>直接抓取内容看看，发现是个加密脚本</p><p><img src="https://oss.waynejoons.icu/picphoto/image-20250124222620261.png"></p><p>这里要写一个逆推脚本，参考网上的文章</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span>  </span><br><span class="line"><span class="variable">$currentDate</span> = <span class="title function_ invoke__">date</span>(<span class="string">&quot;Y-m-d&quot;</span>);  </span><br><span class="line"><span class="variable">$key</span> = <span class="title function_ invoke__">md5</span>(<span class="string">&#x27;2023-11-18&#x27;</span>);  </span><br><span class="line"><span class="variable">$iv</span> = <span class="title function_ invoke__">substr</span>(<span class="title function_ invoke__">hash</span>(<span class="string">&#x27;sha256&#x27;</span>, <span class="string">&quot;DeepMountainsGD&quot;</span>), <span class="number">0</span>, <span class="number">16</span>);  </span><br><span class="line"><span class="variable">$filePath</span> = <span class="string">&quot;/var/lib/mysql/JPMorgan@0020Chase&quot;</span>;  </span><br><span class="line"><span class="variable">$files</span> = <span class="title function_ invoke__">scandir</span>(<span class="variable">$filePath</span>);  </span><br><span class="line"><span class="keyword">foreach</span> (<span class="variable">$files</span> <span class="keyword">as</span> <span class="variable">$file</span>) &#123;  </span><br><span class="line">        <span class="keyword">if</span> (<span class="variable">$file</span> != <span class="string">&quot;.&quot;</span> &amp;&amp; <span class="variable">$file</span> != <span class="string">&quot;..&quot;</span>) &#123;  </span><br><span class="line">                    <span class="variable">$fullPath</span> = <span class="variable">$filePath</span> . <span class="string">&#x27;/&#x27;</span> . <span class="variable">$file</span>;  </span><br><span class="line">                        <span class="variable">$encryptedContent</span> = <span class="title function_ invoke__">file_get_contents</span>(<span class="variable">$fullPath</span>);  </span><br><span class="line">                        <span class="variable">$decryptedContent</span> = <span class="title function_ invoke__">openssl_decrypt</span>(<span class="variable">$encryptedContent</span>, <span class="string">&#x27;aes-256-cbc&#x27;</span>, <span class="variable">$key</span>, <span class="number">0</span>, <span class="variable">$iv</span>);  </span><br><span class="line">                            <span class="title function_ invoke__">file_put_contents</span>(<span class="variable">$fullPath</span>, <span class="variable">$decryptedContent</span>);  </span><br><span class="line">                        &#125;  </span><br><span class="line">&#125;  </span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>这里的时间是JPMorgan@0020Chase的创建时间</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">stat JPMorgan@0020Chase#查看详细信息</span><br></pre></td></tr></table></figure><p><img src="https://oss.waynejoons.icu/picphoto/image-20250124223341527.png"></p><p>把脚本写进&#x2F;var&#x2F;www&#x2F;mysql&#x2F;目录</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vim 1.php</span><br></pre></td></tr></table></figure><p><img src="https://oss.waynejoons.icu/picphoto/image-20250124223537024.png"></p><p>先按<code>i</code>插入代码，然后按一下<code>Esc</code>，再按住<code>shift + :</code>，然后输入<code>wq</code>保存</p><p>运行代码</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">php 1.php</span><br></pre></td></tr></table></figure><p>重启数据库</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl restart mysql</span><br></pre></td></tr></table></figure><p>这时再返回Premium，可以发现数据库解密了，Harper用户对应Areer为Chef，加密即可</p><p><img src="https://oss.waynejoons.icu/picphoto/image-20250124224210369.png"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">flag&#123;8fd82b8864d71ed7fa12b59e6e34cd1c&#125;</span><br></pre></td></tr></table></figure><h3 id="步骤-1-10"><a href="#步骤-1-10" class="headerlink" title="步骤#1.10"></a>步骤#1.10</h3><p><strong>题目：因为什么文件中的漏洞配置，导致了攻击者成功执行命令并提权。提交该文件的小写md5值，格式flag{md5}。</strong></p><p>这里攻击者用到提权，可以查找以 root 用户身份拥有并设置了 SUID（Set User ID）权限的文件。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">find / -user root -perm -4000 2&gt;/dev/null#4000 代表文件权限中的 SUID 位。</span><br></pre></td></tr></table></figure><p>当一个文件被设置了 SUID 位，并且用户执行该文件时，该程序会以文件拥有者（通常是 root）的权限运行，而不是以当前用户的权限运行</p><p><img src="https://oss.waynejoons.icu/picphoto/image-20250124224704235.png"></p><p>发现&#x2F;usr&#x2F;bin&#x2F;sudo，sudo 被广泛用于权限提升，估计攻击者通过这个提权，&#x2F;etc&#x2F;sudoers 包含了系统上 sudo 的配置和权限设置，这里抓取内容看一下</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cat /etc/sudoers</span><br></pre></td></tr></table></figure><p><img src="https://oss.waynejoons.icu/picphoto/image-20250124225016730.png"></p><p>www-data用户被赋予了root权限，而且不需要输入密码，到这里已经可以确认漏洞配置了，就是&#x2F;etc&#x2F;sudoers ，加密文件得到flag</p><p><img src="https://oss.waynejoons.icu/picphoto/image-20250124225250689.png"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">flag&#123;6585817513b0ea96707ebb0d04d6aeff&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">玄机靶场刷题记录</summary>
    
    
    
    <category term="应急响应" scheme="https://waynejoon.github.io/categories/%E5%BA%94%E6%80%A5%E5%93%8D%E5%BA%94/"/>
    
    
    <category term="应急响应" scheme="https://waynejoon.github.io/tags/%E5%BA%94%E6%80%A5%E5%93%8D%E5%BA%94/"/>
    
  </entry>
  
</feed>
